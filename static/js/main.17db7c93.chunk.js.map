{"version":3,"sources":["state/actions.js","components/NewTodoForm.js","components/TodoList.js","components/App.js","state/models/todo.js","index.js","state/rootReducer.js","epics/rootEpic.js"],"names":["ADD_TODO","COMPLETE_TODO","DELETE_TODO","NewTodoForm","_PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","dueDate","DateTime","local","plus","days","toJSDate","onSubmit","e","addTodo","props","preventDefault","form","target","_form$elements","slicedToArray","elements","title","desc","value","onDateChange","setState","inherits","createClass","key","react_default","a","createElement","className","type","name","placeholder","required","react_datepicker_es","selected","onChange","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","PureComponent","TodoList","_this$props","items","completeTodo","deleteTodo","map","item","idx","defaultChecked","completed","disabled","onClick","description","fromJSDate","diffNow","toFormat","App","connect","_Component","dispatch","NewTodoForm_NewTodoForm","payload","TodoList_TodoList","index","Component","STATUS_PENDING","Todo","status","undefined","_title","_description","_dueDate","_status","get","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","store","createStore","action","_action$payload","toConsumableArray","complete","splice","applyMiddleware","run","action$","Observable","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.17db7c93.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\n\nexport function addTodo(item) {\n    return {type: ADD_TODO, payload: item};\n}\n\nexport function completeTodo(index) {\n    return {type: COMPLETE_TODO, payload: {index}};\n}\n\nexport function deleteTodo(index) {\n    return {type: DELETE_TODO, payload: {index}};\n}\n","import React, {PureComponent} from 'react';\nimport DatePicker from 'react-datepicker';\nimport DateTime from 'luxon/src/datetime.js'\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport class NewTodoForm extends PureComponent {\n    state = {\n        dueDate: DateTime.local().plus({days: 1}).toJSDate(),\n    };\n\n    onSubmit = (e) => {\n        const {addTodo} = this.props;\n        const {dueDate} = this.state;\n\n        e.preventDefault();\n        const form = e.target;\n        const [title, desc] = form.elements;\n        addTodo({\n            title: title.value,\n            desc: desc.value,\n            dueDate,\n        });\n        title.value = null;\n        desc.value = null;\n    };\n\n    onDateChange = (dueDate) => {\n        this.setState({\n            dueDate,\n        })\n    };\n\n    render() {\n        const {dueDate} = this.state;\n        return (\n            <form className=\"entry-form\" onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Title\"\n                    required\n                />\n                <input\n                    type=\"text\"\n                    name=\"desc\"\n                    placeholder=\"Description\"\n                    required\n                />\n                <DatePicker\n                    selected={dueDate}\n                    onChange={this.onDateChange}\n                    peekNextMonth\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    timeIntervals={15}\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    timeCaption=\"time\"\n                />\n                <button type=\"submit\">Add</button>\n            </form>\n        )\n    }\n}\n","import React, { PureComponent } from 'react';\nimport DateTime from 'luxon/src/datetime.js'\n\nexport class TodoList extends PureComponent {\n    render() {\n        const {items, completeTodo, deleteTodo} = this.props;\n\n        return (\n            <ul>\n                {items.map((item, idx) => (\n                    <li className=\"to-do\" key={idx}>\n                        <span className=\"to-do__content\">\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={item.completed()}\n                                disabled={item.completed()}\n                                onClick={() => completeTodo(idx)}\n                            />\n                            &nbsp;\n                            <button onClick={() => deleteTodo(idx)}>ðŸ—‘</button>\n                            &nbsp;\n                            <span className=\"title\">{item.title}</span>\n                            &nbsp;\n                            <span className=\"description\">{item.description}</span>\n                        </span>\n                        <span className=\"to-do__due-date\">{DateTime.fromJSDate(item.dueDate).diffNow().toFormat('d')} days</span>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {addTodo, completeTodo, deleteTodo} from '../state/actions';\nimport {NewTodoForm} from './NewTodoForm';\nimport {TodoList} from './TodoList';\n\nconst mapStateToProps = (items) => ({ items });\n\nexport const App = connect(mapStateToProps)(class App extends Component {\n        render() {\n        const {dispatch, items} = this.props;\n        return (\n            <div>\n                <NewTodoForm\n                    addTodo={(...args) => dispatch(addTodo(...args))}\n                />\n                <TodoList\n                    items={items}\n                    completeTodo={(...args) => dispatch(completeTodo(...args))}\n                    deleteTodo={(...args) => dispatch(deleteTodo(...args))}\n                />\n            </div>\n        );\n    }\n});\n","export const STATUS_DONE = 'done';\nexport const STATUS_PENDING = 'pending';\n\nexport class Todo {\n    constructor(title, description, dueDate, status = STATUS_PENDING) {\n        this._title = title;\n        this._description = description;\n        this._dueDate = dueDate;\n        this._status = status;\n    }\n\n    complete() {\n        this._status = STATUS_DONE;\n    }\n\n    completed() {\n        return this._status === STATUS_DONE;\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    get description() {\n        return this._description;\n    }\n\n    get dueDate() {\n        return this._dueDate;\n    }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport {App} from './components/App';\nimport {rootEpic} from './epics/rootEpic';\nimport {rootReducer} from './state/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst epicMiddleware = createEpicMiddleware();\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(epicMiddleware),\n    ),\n);\n\nepicMiddleware.run(rootEpic);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","import {ADD_TODO, COMPLETE_TODO, DELETE_TODO} from './actions';\nimport {Todo} from './models/todo';\n\nexport function rootReducer(state = [], action) {\n    switch (action.type) {\n        case ADD_TODO:\n            const {title, desc, dueDate, status} = action.payload;\n            return [...state, new Todo(title, desc, dueDate, status)];\n\n        case COMPLETE_TODO: {\n            const {index} = action.payload;\n            state[index].complete();\n            return [...state];\n        }\n\n        case DELETE_TODO: {\n            const {index} = action.payload;\n            state.splice(index, 1);\n            return [...state];\n        }\n\n\n        default:\n            return state;\n    }\n}\n","import * as Observable from 'rxjs';\n\nexport const rootEpic = action$ => Observable.EMPTY;\n"],"sourceRoot":""}